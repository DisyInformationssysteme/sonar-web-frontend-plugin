[ {
  "key" : "ng_angularelement",
  "name" : "angularelement",
  "description" : "use angular.element instead of $ or jQuery",
  "severity" : "MAJOR",
  "status" : null,
  "tags" : [ "angular", "eslint", "bad-practice" ],
  "debt" : null
}, {
  "key" : "ng_controller_as",
  "name" : "controller-as",
  "description" : "disallow assignments to $scope in controllers",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_controller_as_route",
  "name" : "controller-as-route",
  "description" : "require the use of controllerAs in routes or states",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_controller_as_vm",
  "name" : "controller-as-vm",
  "description" : "require and specify a capture variable for this in controllers",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_controller_name",
  "name" : "controller-name",
  "description" : "require and specify a prefix for all controller names",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_deferred",
  "name" : "deferred",
  "description" : "use $q(function(resolve, reject){}) instead of $q.deferred",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_definedundefined",
  "name" : "definedundefined",
  "description" : "use angular.isDefined and angular.isUndefined instead of other undefined checks",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : [ "angular", "pitfall" ],
  "debt" : {
    "sqaleRemediation" : {
      "type" : "constant",
      "offset" : "1min"
    },
    "sqaleSubCharacteristic" : "MAINTAINABILITY_COMPLIANCE"
  }
}, {
  "key" : "ng_di",
  "name" : "di",
  "description" : "require a consistent DI syntax",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_directive_name",
  "name" : "directive-name",
  "description" : "require and specify a prefix for all directive names",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_directive_restrict",
  "name" : "directive-restrict",
  "description" : "disallow any other directive restrict than 'A' or 'E'",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_component_limit",
  "name" : "component-limit",
  "description" : "limit the number of angular components per file",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_document_service",
  "name" : "document-service",
  "description" : "use $document instead of document",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_empty_controller",
  "name" : "empty-controller",
  "description" : "disallow empty controllers",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_file_name",
  "name" : "file-name",
  "description" : "require and specify a consistent component name pattern",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_filter_name",
  "name" : "filter-name",
  "description" : "require and specify a prefix for all filter names",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_foreach",
  "name" : "foreach",
  "description" : "use angular.forEach instead of native Array.prototype.forEach",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_function_type",
  "name" : "function-type",
  "description" : "require and specify a consistent function style for components",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_interval_service",
  "name" : "interval-service",
  "description" : "use $interval instead of setInterval",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_json_functions",
  "name" : "json-functions",
  "description" : "enforce use ofangular.fromJson and 'angular.toJson'",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_log",
  "name" : "log",
  "description" : "use the $log service instead of the console methods",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_dependency_order",
  "name" : " ng dependency order ",
  "description" : " Module dependencies should be sorted in a logical manner. This rule provides two ways to sort modules, grouped or ungrouped. In grouped mode the modules should be grouped in the order: standard modules - third party modules - custom modules. The modules should be sorted alphabetically within its group. A prefix can be specified to determine which prefix the custom modules have. Without grouped set to false all dependencies combined should be sorted alphabetically. ('module-dependency-order', [2, {grouped: true, prefix: \"app\"}])",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_module_getter",
  "name" : "module-getter",
  "description" : "enforce to reference modules with the getter syntax",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_module_name",
  "name" : "module-name",
  "description" : "require and specify a prefix for all module names",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_module_setter",
  "name" : "module-setter",
  "description" : "disallow to assign modules to variables",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "no_angular_mock",
  "name" : " ng no angular mock ",
  "description" : " All methods defined in the angular.mock object are also available in the object window. So you can remove angular.mock from your code",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "no_controller",
  "name" : " ng no controller ",
  "description" : " According to the Component-First pattern, we should avoid the use of AngularJS controller.",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_no_cookiestore",
  "name" : "no-cookiestore",
  "description" : "use $cookies instead of $cookieStore",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_no_digest",
  "name" : " ng no digest ",
  "description" : " The scope's $digest() method shouldn't be used. You should prefer the $apply method. ",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_no_jquery_angularelement",
  "name" : "no-jquery-angularelement",
  "description" : "disallow to wrap angular.element objects with jQuery or $",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_no_private_call",
  "name" : "no-private-call",
  "description" : "disallow use of internal angular properties prefixed with $$",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_no_services",
  "name" : "no-services",
  "description" : "disallow DI of specified services",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_no_service_method",
  "name" : "no-service-method",
  "description" : "use factory() instead of service()",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_on_watch",
  "name" : "on-watch",
  "description" : "require $on and $watch deregistration callbacks to be saved in a variable",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_rest_service",
  "name" : "rest-service",
  "description" : "disallow different rest service and specify one of '$http', '$resource', 'Restangular'",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_service_name",
  "name" : "service-name",
  "description" : "require and specify a prefix for all service names",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_timeout_service",
  "name" : "timeout-service",
  "description" : "use $timeout instead of setTimeout",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_typecheck_array",
  "name" : "typecheck-array",
  "description" : "use angular.isArray instead of typeof comparisons",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_typecheck_boolean",
  "name" : " ng typecheck boolean ",
  "description" : " You should use the angular.isBoolean method instead of the default JavaScript implementation (typeof true === \"[object Boolean]\"). ",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_typecheck_date",
  "name" : "typecheck-date",
  "description" : "use angular.isDate instead of typeof comparisons",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_typecheck_function",
  "name" : "typecheck-function",
  "description" : "use angular.isFunction instead of typeof comparisons",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_typecheck_number",
  "name" : "typecheck-number",
  "description" : "use angular.isNumber instead of typeof comparisons",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_typecheck_object",
  "name" : "typecheck-object",
  "description" : "use angular.isObject instead of typeof comparisons",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_typecheck_regexp",
  "name" : " ng typecheck regexp ",
  "description" : " You should use the angular.isRegexp method instead of the default JavaScript implementation (toString.call(/^A/) === \"[object RegExp]\"). ",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_typecheck_string",
  "name" : "typecheck-string",
  "description" : "use angular.isString instead of typeof comparisons",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_watchers_execution",
  "name" : "watchers-execution",
  "description" : "require and specify consistent use $scope.digest() or $scope.apply()",
  "severity" : "MINOR",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_window_service",
  "name" : "window-service",
  "description" : "use $window instead of window",
  "severity" : "CRITICAL",
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_di_unused",
  "name" : "di-unused",
  "description" : "disallow unused DI parameters",
  "severity" : null,
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_no_controller",
  "name" : "no-controller",
  "description" : "disallow use of controllers (according to the component first pattern)",
  "severity" : null,
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_no_inline_template",
  "name" : "no-inline-template",
  "description" : "disallow the use of inline templates",
  "severity" : null,
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_no_run_logic",
  "name" : "no-run-logic",
  "description" : "keep run functions clean and simple",
  "severity" : null,
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_no_directive_replace",
  "name" : "no-directive-replace",
  "description" : "disallow the deprecated directive replace property",
  "severity" : null,
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_no_http_callback",
  "name" : "no-http-callback",
  "description" : "disallow the $http methods success() and error()",
  "severity" : null,
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_di_order",
  "name" : "di-order",
  "description" : "require DI parameters to be sorted alphabetically",
  "severity" : null,
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_dumb_inject",
  "name" : "dumb-inject",
  "description" : "unittest inject functions should only consist of assignments from injected values to describe block variables",
  "severity" : null,
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_module_dependency_order",
  "name" : "module-dependency-order",
  "description" : "require a consistent order of module dependencies",
  "severity" : null,
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_one_dependency_per_line",
  "name" : "one-dependency-per-line",
  "description" : "require all DI parameters to be located in their own line",
  "severity" : null,
  "status" : null,
  "tags" : null,
  "debt" : null
}, {
  "key" : "ng_no_angular_mock",
  "name" : "no-angular-mock",
  "description" : "require to use angular.mock methods directly",
  "severity" : null,
  "status" : null,
  "tags" : null,
  "debt" : null
} ]