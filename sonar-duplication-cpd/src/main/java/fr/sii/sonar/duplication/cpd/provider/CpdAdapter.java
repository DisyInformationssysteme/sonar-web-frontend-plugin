package fr.sii.sonar.duplication.cpd.provider;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;

import fr.sii.sonar.duplication.cpd.domain.PmdCpd;
import fr.sii.sonar.duplication.cpd.domain.PmdCpd.Duplication;
import fr.sii.sonar.report.core.common.provider.ReportAdapter;
import fr.sii.sonar.report.core.duplication.domain.DuplicatedBlock;
import fr.sii.sonar.report.core.duplication.domain.DuplicationGroup;
import fr.sii.sonar.report.core.duplication.domain.DuplicationReport;

/**
 * Adapter that transforms raw xml report generated by PMD-CPD into a
 * {@link DuplicationReport} usable by Sonar.
 * 
 * @author Aur√©lien Baudet
 *
 */
public class CpdAdapter implements ReportAdapter<DuplicationReport, PmdCpd> {

	public DuplicationReport adapt(PmdCpd source) {
		Map<String, DuplicationGroup> mergeGroups = new HashMap<String, DuplicationGroup>();
		for(Duplication duplication : source.getDuplication()) {
			DuplicationGroup group = new DuplicationGroup();
			// loop through the duplications
			for(Duplication.File file : duplication.getFile()) {
				DuplicatedBlock block = new DuplicatedBlock(file.getPath(), file.getLine(), file.getLine()+duplication.getLines(), duplication.getCodefragment());
				String blockIdentifier = getBlockIdentifier(duplication, file);
				// if the key is not already registered => add the current group
				if(!mergeGroups.containsKey(blockIdentifier)) {
					mergeGroups.put(blockIdentifier, group);
				}
				// get the group from the map, if the group already exists => update the reference for next iteration
				group = mergeGroups.get(blockIdentifier);
				// filter blocks that are already present in the group
				if(!group.getDuplicatedBlocks().contains(block)) {
					group.addDuplicatedBlock(block);
				}
			}
		}
		// Do not use mergeGroups.values() directly because several keys may point to the same group instance.
		// mergeGroups.values() will extract a list with several entries for same group instances.
		// Using a HashSet will remove duplicate entries
		return new DuplicationReport(new ArrayList<DuplicationGroup>(new HashSet<DuplicationGroup>(mergeGroups.values())));
	}


	private String getBlockIdentifier(Duplication duplication, Duplication.File file) {
		return file.getPath()+":"+file.getLine()+":"+duplication.getLines();
	}
}
